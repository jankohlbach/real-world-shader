---
interface Props {
  text?: string;
}

const { text = 'splash' } = Astro.props;
---

<script>
  import { gsap } from 'gsap';

  import { scrollStop, scrollStart } from '../scripts/scroll';

  const splash: HTMLElement | null =
    document.querySelector('[data-js="splash"]');

  window.addEventListener('load', () => {
    if (!sessionStorage.getItem('splash:played') && splash) {
      scrollStop();

      gsap
        .timeline({
          delay: 0.2,
          defaults: { duration: 1, ease: 'power4.inOut' },
        })
        .to(splash, {
          scale: 0.8,
        })
        .to(splash, {
          scale: 0.5,
          autoAlpha: 0,
        })
        .call(
          () => {
            window.dispatchEvent(new Event('splash:done'));
          },
          [],
          '<0.4',
        )
        .call(() => {
          scrollStart();
          sessionStorage.setItem('splash:played', 'true');
        });
    } else {
      window.dispatchEvent(new Event('splash:done'));
    }
  });

  window.addEventListener('splash:done', () => {
    document.querySelectorAll('[data-inview-manual]').forEach((el) => {
      el.classList.add('inview');
    });
  });
</script>

<div class="splash" data-js="splash">
  <div class="content">
    <h1>{text}</h1>
  </div>
</div>

<style lang="scss" is:global>
  html.play-splash {
    .splash {
      display: block;
    }
  }
</style>

<style lang="scss">
  .splash {
    position: fixed;
    inset: 0;
    display: none;
    width: 100vw;
    height: 100%;
    z-index: var(--zi-splash);
    background-color: var(--c-dark);
  }

  .content {
    display: grid;
    width: 100%;
    height: 100%;
    place-items: center;
  }

  h1 {
    color: var(--c-light);
  }
</style>
