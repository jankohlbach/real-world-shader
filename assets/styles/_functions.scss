@use 'sass:math';

@function strip-unit($number) {
  @if type-of($number)=='number' and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

@function to-rem($size-in-px) {
  @return math.div(strip-unit($size-in-px), strip-unit(16px)) * 1rem;
}

@function clampFluid($min, $max) {
  @return clamp(to-rem($min), calc(((100 * ($max - $min)) / (var(--fluid-max) - var(--fluid-min))) * 1vw) + calc((((var(--fluid-min) * $max) - (var(--fluid-max) * $min)) / (var(--fluid-min) - var(--fluid-max))) / 16 * 1rem), to-rem($max));
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function url-encode($string) {
  $map: (('<', '%3C'),
    ('>', '%3E'),
    ('"', '\''),
    ('#', '%23'),
    ('&', '%26'),
  );

  $new: $string;

  @each $search,
  $replace in $map {
    $new: str-replace($new, $search, $replace);
  }

  @return $new;
}

@function inline-svg($string) {
  @return url("data:image/svg+xml,#{url-encode($string)}");
}
